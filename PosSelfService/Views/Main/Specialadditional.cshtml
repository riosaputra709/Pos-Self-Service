@using PosSelfService.Models;
@using PosSelfService.Common;
@{
    ClsBarang produk = (ClsBarang)ViewData["produk"];
    int cartId = (int)ViewData["cartId"];

    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Special Additional</title>
    <link rel="stylesheet" href="~/Assets/css/style-custom.css" />
    <link href="~/Assets/css/bootstrap.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Assets/css/loader.css">
    <link rel="stylesheet" href="~/Assets/css/sweetalert2.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .btn.active {
            background-color: #dc3545; /* Warna merah (btn-danger) saat tombol aktif */
            border-color: #dc3545; /* Warna garis pinggiran merah (btn-danger) saat tombol aktif */
            color: #fff; /* Warna teks menjadi putih saat tombol aktif */
        }
    </style>
</head>
<body>
    <div class="loader-div">
        <img class="loader-img" src="~/Assets/image/loading.gif" style="height: 40px;width: auto;" />
    </div>

    <div class="menu">
        <div class="div-auto" style="background-color: white;">
            <form data-multi-step="" class="multi-step-form">
                <div class="container-fluid" style="padding-top: 36px;padding-left: 22px;">
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-4 d-flex align-items-center">
                            <div class="card">
                                <img src="@produk.ProductImageString" alt="" class="img-thumbnail" style="max-height: 286px;">
                            </div>
                        </div>
                        <div class="col-6">
                            <h3>@produk.Merk</h3>
                            <h3>@produk.Nama</h3>
                            <p class="text-justify" style="margin-top: 20px;">
                                @produk.Desc2
                            </p>
                        </div>
                        <div class="col-lg-3 col-md-3 col-2 d-flex justify-content-center">
                            <b>
                                <h4 class="text-primary" id="productModalPrice">
                                    Rp @produk.HargaJualRp.ToString("N0")
                                </h4>
                            </b>
                        </div>
                    </div>
                    <hr>
                </div>

                @if (cartId == 0)
                {
                    <div id="divGrid">
                        @Html.Partial("_AddSpecialAdditional");
                    </div>
                }
                else
                {
                    <div id="divGrid">
                        @Html.Partial("_UpdateSpecialAdditional");
                    </div>
                }

            </form>
        </div>
    </div>
    <script src="~/Assets/js/sweetalert2.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Assets/js/bootstrap.min.js"></script>
    <script>

        const buttons = document.querySelectorAll("button[data-max-active]");
        buttons.forEach(button => {
            button.addEventListener("click", () => {
                const maxActive = parseInt(button.getAttribute("data-max-active"));
                const group = button.parentElement;
                const groupParent = group.parentElement;
                const activeButtons = groupParent.querySelectorAll(".btn.active").length;

                if (button.classList.contains("active")) {
                    button.classList.remove("active");
                    button.classList.add("btn-outline-secondary");
                } else if (activeButtons < maxActive) {
                    button.classList.remove("btn-outline-secondary");
                    button.classList.add("active");
                }
            });
        });

        function decrementQuantity() {
            var quantityLabel = document.getElementById('productQuantity');
            var currentValue = parseInt(quantityLabel.innerText, 10);

            // Memastikan nilai tidak kurang dari minimum yang ditetapkan (1)
            if (currentValue > 1) {
                quantityLabel.innerText = currentValue - 1;
            }
        }

        function incrementQuantity() {
            var quantityLabel = document.getElementById('productQuantity');
            var currentValue = parseInt(quantityLabel.innerText, 10);

            quantityLabel.innerText = currentValue + 1;
        }

        function AddToCart() {
            $(".loader-div").show();

            var additionalBhn = [];

            const additional = document.querySelectorAll("div[rowKelSpec]");
            additional.forEach(group => {
                const btnActive = group.querySelectorAll(".btn.active");
                const lblSpec = group.querySelector("h5[lblKelSpecReq]");
                const lblMaxAdditional = group.querySelector("p[lblMaxSpecReq]");

                var idLbl = lblSpec.id;
                var idLblMax = lblMaxAdditional.id;
                var type = group.id;
                var bhn = "";

                btnActive.forEach(button => {
                    bhn += button.value + ", ";
                });
                if (bhn != "") {
                    bhn = bhn.substring(0, bhn.length - 2);
                }

                var item = {
                    kelSpecReq: idLbl,
                    typeAdditional: type,
                    maxAdditional: idLblMax,
                    objAdditional: bhn
                };
                additionalBhn.push(item)
            });

            $.ajax({
                type: "POST",
                url: "/Main/TambahProdukSpecialRequest",
                data: {
                    prdcd: @produk.PLU,
                    qty: $("#productQuantity").text(),
                    bahan: additionalBhn
                },
                success: function (returnResult) {
                    $(".loader-div").hide();
                    if (returnResult.Result == 'ERROR') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: returnResult.ErrMesgs[0]
                        })
                    }
                    else {
                        $(".loader-div").hide();
                        Swal.fire({
                            title: "Sukses !",
                            text: "Pesananmu berhasil ditambahkan ke dalam keranjang",
                            icon: "success",
                            showCancelButton: false,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "OK"
                        }).then((result) => {
                            window.location.href = "/Main/Index";
                        });
                    }
                },
                error: function () {
                    $(".loader-div").hide();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'gagal menambahkan produk ke keranjang'
                    })
                }
            });
        }


        function UpdateToCart() {
            $(".loader-div").show();

            var additionalBhn = [];

            const additional = document.querySelectorAll("div[rowKelSpec]");
            additional.forEach(group => {
                const btnActive = group.querySelectorAll(".btn.active");
                const lblSpec = group.querySelector("h5[lblKelSpecReq]");
                const lblMaxAdditional = group.querySelector("p[lblMaxSpecReq]");

                var idLbl = lblSpec.id;
                var idLblMax = lblMaxAdditional.id;
                var type = group.id;
                var bhn = "";

                btnActive.forEach(button => {
                    bhn += button.value + ", ";
                });
                if (bhn != "") {
                    bhn = bhn.substring(0, bhn.length - 2);
                }

                var item = {
                    kelSpecReq: idLbl,
                    typeAdditional: type,
                    maxAdditional: idLblMax,
                    objAdditional: bhn
                };
                additionalBhn.push(item)
            });

            $.ajax({
                type: "POST",
                url: "/Main/UbahProdukSpecialRequest",
                data: {
                    id : @cartId,
                    prdcd: @produk.PLU,
                    qty: $("#productQuantity").text(),
                    bahan: additionalBhn
                },
                success: function (returnResult) {
                    $(".loader-div").hide();
                    if (returnResult.Result == 'ERROR') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: returnResult.ErrMesgs[0]
                        })
                    }
                    else {
                        $(".loader-div").hide();
                        Swal.fire({
                            title: "Sukses !",
                            text: "Pesananmu berhasil ditambahkan ke dalam keranjang",
                            icon: "success",
                            showCancelButton: false,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "OK"
                        }).then((result) => {
                            window.location.href = "/Main/Index";
                        });
                    }
                },
                error: function () {
                    $(".loader-div").hide();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'gagal menambahkan produk ke keranjang'
                    })
                }
            });
        }

    </script>
</body>
</html>
